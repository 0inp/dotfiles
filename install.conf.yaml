- defaults:
    shell:
      stdin: true
      stdout: true
      stderr: true
    link:
      relink: true
- clean: ["~"]
- link:
    ~/.config: symlinks/config
    ~/.gitconfig: symlinks/gitconfig
    ~/.gitignore: symlinks/gitignore
    ~/.gnupg/gpg-agent.conf: symlinks/gnupg/gpg-agent.conf
    ~/.gnupg/gpg.conf: symlinks/gnupg/gpg.conf
    ~/.python-version: symlinks/python-version
    ~/.pythonrc: symlinks/pythonrc
    ~/.zsh: symlinks/zsh
    ~/.zshrc: symlinks/zshrc
- shell:
    - [brew cleanup && brew update && brew upgrade, Upgrade brew]
- tap:
    - amar1729/formulae
    - homebrew/bundle
    - homebrew/cask-fonts
    - jesseduffield/lazygit
- cask:
    - font-iosevka-nerd-font
    - raycast # better Spotlight
    - rectangle # macos window management
    - stats # System stats menu bar
- brew:
    - alacritty
    - bash
    - bat # better cat
    - browserpass # password manager
    - coreutils
    - exa # ls alternative
    - fd # find alternative
    - git
    - git-delta # Better git diff
    - gitlint # Linting comiit messages
    - glow # Render markdown
    - gnupg
    - hiddenbar
    - htop # top alternative
    - httpie
    - itsycal
    - lazygit # git interface
    - neovim # neovim
    - node # Node
    - openssl
    - pgcli # PGCli
    - pinentry-mac
    - pyenv
    - pyenv-virtualenv
    - readline
    - ripgrep # very fast file searcher
    - sqlite3
    - starship # prompt
    - the_silver_searcher
    - tmux
    - wget
    - xz # Compression
    - zlib
    - zsh
    - zoxide
- shell:
    - [
        'chmod +x "${HOME}/dotfiles/resources/chtfzf.sh"',
        Ensure that cheatsheet fzf script is executable,
      ]
    - command: if [ -d "$HOME/.fzf" ]; then cd ~/.fzf/ && git pull && ./install --key-bindings --completion --update-rc --no-bash --no-fish; else git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --key-bindings --completion --update-rc --no-bash --no-fish; fi
      description: FZF useful keybindings and competion
    - [
        pyenv install -s && head -n 1 ~/.python-version | xargs pyenv global,
        Install python versions,
      ] # install differents python versions
    - [python -m pip install --upgrade pip, Upgrade Pip] # Upgrade pip
    - [python3 -m pip install --user libtmux, Install libtmux useful for tmux-window-name plugin]
    - [git submodule sync --recursive, Sync submodules]
    - [git submodule update --init --recursive, Install submodules] # install submodules
    - [
        PREFIX='/usr/local/opt/browserpass' make hosts-chrome-user -f /usr/local/opt/browserpass/lib/browserpass/Makefile,
        Configure Browserpass,
      ] # Configure browserpass extension
    - [
        "curl -sSL https://install.python-poetry.org | python3 -",
        Install poetry,
      ] # install poetry
    - [poetry self update, Update poetry] # update poetry
    - command: sudo chsh -s $(which zsh) ${USER} # switch to zsh
      description: Switch to ZSH
    - command: $PWD/resources/macos_settings.sh
      description: Defaults MacOS settings
- git:
    "~/.fzf-tab":
      url: "https://github.com/Aloxaf/fzf-tab"
      description: "fzf-tab autocompletion with fzf"
    "~/.tmux/plugins/tpm":
      url: "https://github.com/tmux-plugins/tpm"
      description: "Tmux Plugin Manager"
