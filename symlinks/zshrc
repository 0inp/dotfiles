plugins=(
    brew
    pass
)
CASE_SENSITIVE=true
ZSH_DISABLE_COMPFIX=true

ANTIGEN_PATH=$HOME/dotfiles/antigen
source $ANTIGEN_PATH/antigen.zsh
antigen init ${HOME}/.antigenrc
# Spaceships Prompt theme customization
export SPACESHIP_GCLOUD_SHOW=false

export LANG=en
export TERM='xterm-256color'
export LC_ALL=en_US.utf-8
export LC_CTYPE=en_US.utf-8
export EDITOR=vi
export PGHOST=localhost
export PACKAGECLOUD_TOKEN=5a437f5ec3db1d55e243644691ed21170b8befe2d1ed94a8
export PACKAGECLOUD_NPM_TOKEN=da74db59526ca18ce45521a27ecac7fb2ec2d98d95b1c0b7
export GPG_TTY=`tty`

# Customize to your needs...
alias less='less -r'
alias vi='vim'
alias tmux='tmux -2'
alias python=/usr/bin/python3

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:/usr/local/bin:/sbin:/usr/sbin:$PATH"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='
  --color fg:-1,bg:-1,hl:230,fg+:3,bg+:233,hl+:229
  --color info:150,prompt:110,spinner:150,pointer:167,marker:174
  --height=40%
  --preview="cat {}"
  --preview-window=right:60%:wrap
'
if command -v ag > /dev/null 2>&1; then
  export FZF_DEFAULT_COMMAND="ag -l 2> /dev/null"
  export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
fi

if [ -f ~/.localrc ]
then
    source ~/.localrc
fi

PYTHONSTARTUP=~/.pythonrc.py
export PYTHONSTARTUP

export PATH="$HOME/.pyenv/bin:$PATH"
export PATH="$HOME/opt/pyenv/bin:$PATH"
export PYENV_ROOT="$HOME/.pyenv"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

alias fixssh='eval $(tmux showenv -s SSH_AUTH_SOCK)'
SSH_ENV="${HOME}/.ssh/environment"

stop_ssh_agent() {
  if [[ -n ${SSH_AGENT_PID:-} ]]; then
    ssh-agent -k
    rm -rf "${SSH_ENV}"
  fi
}

init_ssh_agent() {
  printf "Initializing new SSH agent...\n"

  touch "${SSH_ENV}"
  chmod 600 "${SSH_ENV}"

  ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
  source "${SSH_ENV}" > /dev/null
}

start_ssh_agent() {
  stop_ssh_agent

  if [[ -d ${HOME}/.ssh/ ]]; then
    local AGENT_INITIALIZED="false"

    for key in "${HOME}/.ssh/"*.pub; do
      if [[ ${AGENT_INITIALIZED} == "false" ]]; then
        AGENT_INITIALIZED="true"
        init_ssh_agent
      fi

      ssh-add -k "${key%.pub}"
    done
  fi
}

if [[ -f ${SSH_ENV} ]]; then
  source "${SSH_ENV}" > /dev/null
else
  start_ssh_agent
fi

export PATH="/usr/local/sbin:$PATH"

# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/opt/google-cloud-sdk/path.zsh.inc" ]; then . "$HOME/opt/google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$HOME/opt/google-cloud-sdk/completion.zsh.inc" ]; then . "$HOME/opt/google-cloud-sdk/completion.zsh.inc"; fi

if ! command -v gcloud > /dev/null 2>&1; then
  return
fi

export BOTO_CONFIG=/dev/null
export CLOUDSDK_PYTHON=/usr/bin/python

gcloud_auth() {
  rm -rf "/tmp/${USER}*"
  gcloud auth login --no-launch-browser

  gcloud config unset compute/region
  gcloud config set project "$(gcloud projects list | grep dev | awk '{print $1}')"

  if command -v docker > /dev/null 2>&1; then
    gcloud --quiet auth configure-docker "eu.gcr.io"
  fi
}
